name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        platform: [x64]
        configuration: [Debug, Release]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        cache: true
    
    - name: Restore dependencies
      run: dotnet restore NotionMemo.sln
    
    - name: Build
      run: dotnet build NotionMemo.sln --configuration ${{ matrix.configuration }} -p:Platform=${{ matrix.platform }} --no-restore
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.platform }}-${{ matrix.configuration }}
        path: |
          Community.PowerToys.Run.Plugin.NotionMemo/bin/${{ matrix.platform }}/${{ matrix.configuration }}/**
          Community.PowerToys.Run.Plugin.FastNotionPlugin.UnitTests/bin/${{ matrix.platform }}/${{ matrix.configuration }}/**
        retention-days: 5

  test:
    runs-on: windows-latest
    needs: build
    
    strategy:
      matrix:
        configuration: [Debug, Release]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        cache: true
    
    - name: Restore dependencies
      run: dotnet restore NotionMemo.sln
    
    - name: Build for testing
      run: dotnet build NotionMemo.sln --configuration ${{ matrix.configuration }} -p:Platform=x64 --no-restore
    
    - name: Run tests
      run: dotnet test NotionMemo.sln --configuration ${{ matrix.configuration }} -p:Platform=x64 --no-build --verbosity normal --logger "trx;LogFileName=test-results-${{ matrix.configuration }}.trx" --results-directory ./TestResults
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.configuration }}
        path: "./TestResults/test-results-${{ matrix.configuration }}.trx"
        retention-days: 5
    
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results (${{ matrix.configuration }})
        path: "./TestResults/test-results-${{ matrix.configuration }}.trx"
        reporter: dotnet-trx
        fail-on-error: true

  security-scan:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        cache: true
    
    - name: Restore dependencies
      run: dotnet restore NotionMemo.sln
    
    - name: Check for vulnerable packages
      run: dotnet list package --vulnerable --include-transitive 2>&1 | tee vulnerability-report.txt
    
    - name: Upload vulnerability report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vulnerability-report
        path: vulnerability-report.txt
        retention-days: 30

  package:
    runs-on: windows-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        platform: [x64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        cache: true
    
    - name: Restore dependencies
      run: dotnet restore NotionMemo.sln
    
    - name: Build for packaging
      run: dotnet build NotionMemo.sln --configuration Release -p:Platform=${{ matrix.platform }} --no-restore
    
    - name: Create plugin package
      run: |
        $pluginDir = "NotionMemo-${{ matrix.platform }}"
        New-Item -ItemType Directory -Path $pluginDir -Force
        
        # Main plugin DLL path
        $mainDllPath = "Community.PowerToys.Run.Plugin.NotionMemo\bin\${{ matrix.platform }}\Release\net9.0-windows10.0.22621.0\Community.PowerToys.Run.Plugin.NotionMemo.dll"
        
        if (Test-Path $mainDllPath) {
          Copy-Item $mainDllPath $pluginDir
          Write-Host "‚úÖ Copied main plugin DLL"
        } else {
          Write-Host "‚ùå Main plugin DLL not found at: $mainDllPath"
          Write-Host "Available files in bin directory:"
          Get-ChildItem "Community.PowerToys.Run.Plugin.NotionMemo\bin" -Recurse | Select-Object FullName
          throw "Main plugin DLL not found"
        }
        
        # Copy plugin.json
        $pluginJsonPath = "Community.PowerToys.Run.Plugin.NotionMemo\plugin.json"
        if (Test-Path $pluginJsonPath) {
          Copy-Item $pluginJsonPath $pluginDir
          Write-Host "‚úÖ Copied plugin.json"
        } else {
          throw "plugin.json not found at: $pluginJsonPath"
        }
        
        # Copy Images folder if exists
        $imagesPath = "Community.PowerToys.Run.Plugin.NotionMemo\Images"
        if (Test-Path $imagesPath) {
          Copy-Item -Recurse $imagesPath $pluginDir
          Write-Host "‚úÖ Copied Images folder"
        } else {
          Write-Host "‚ö†Ô∏è Images folder not found (optional)"
        }
        
        # Show package contents
        Write-Host "üì¶ Package contents:"
        Get-ChildItem $pluginDir -Recurse | Select-Object Name, Length
        
        # Create zip package
        Compress-Archive -Path $pluginDir -DestinationPath "NotionMemo-${{ matrix.platform }}.zip" -Force
        Write-Host "‚úÖ Created package: NotionMemo-${{ matrix.platform }}.zip"
      shell: pwsh
    
    - name: Upload plugin package
      uses: actions/upload-artifact@v4
      with:
        name: NotionMemo-${{ matrix.platform }}
        path: NotionMemo-${{ matrix.platform }}.zip
        retention-days: 90